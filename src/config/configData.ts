export var links = {
  SIGNIN_PAGE_URL: "/signin",
  HOME_PAGE_URL: "/home",
  CONNECTIONS_PAGE_URL: "/connections",
  EXPORTS_PAGE_URL: "/exports",
  MY_ACCOUNT_PAGE_URL: "/myAccount/profile",
  FLOW_BUILDER_PAGE_URL: ""
};
export var TEST_RESULT = {
  TEST_EXECUTION_STOP_ON_FAILURE: false,
  IO_DASHBOARD_JOBCOUNT_SUCCESS: [1, 0, 0],
  IO_DASHBOARD_JOBCOUNT_IGNORE: [0, 1, 0],
  IO_DASHBOARD_JOBCOUNT_FAILURE: [0, 0, 1],
  JOB_COMPLETED_IN_IO_OK:
    "Job Completed Successfully with Correct Dashboard Count... ok!",
  ERR_JOB_COMPLETED_IN_IO_NOT_OK:
    "err!! ...Incorrect Job status from API. Verifying from UI.",
  CRITICAL_ERR_TERMINATING_TEST:
    "xxxxxxxxxxx      SOME ISSUE INITIALIZING BROWSER & LOGGING IN TO IO. TERMINATING TEST.      xxxxxxxxxxx"
  //add appropriate error message to be printed in testReport Here
};

export class configData {
  dashboardSheets = {
    js_runtime: "Platform_React_JS_Runtime",
    create_connections: "Platform_React_Create_Connections",
    edit_connections: "Platform_React_Edit_Connections",
    create_flows_suite_2: "Platform_React_Create_Suite2",
    create_flows_suite_2_user: "Platform_React_Create_Suite2_user",
    create_flows_suite_2_user1: "Platform_React_Create_Suite2_user1",
    create_flows_suite_2_user2: "Platform_React_Create_Suite2_user2",
    crypto_flows: "Platform_React_CryptoMicroservices",
    edit_flows: "Platform_React_Edit_Flows",
    "em2.0": "Platform_React_EM2.0",
    template_cloning: "Platform_React_Template_Cloning",
    "netsuite_ss2.0": "Platform_React_Netsuite_SS2.0",
    AFE: "Platform_React_AFE",
    AFE2: "Platform_React_AFE2",
    FlowEventReport: "Platform_React_FlowEventReport",
    Databases: "Platform_React_Databases",
    Databases1: "Platform_React_Databases1",
    FileAdaptors: "Platform_React_FileAdapators",
    FileAdaptors1: "Platform_React_FileAdapators1",
    FileAdaptors2: "Platform_FileAdaptors2",
    RestHttp: "Platform_React_RestHttp",
    RestHttp_user: "Platform_React_RestHttp_user",
    RestHttp_user1: "Platform_React_RestHttp_user1",
    RestHttp_user2: "Platform_React_RestHttp_user2",
    edit_flows2: "Platform_React_Edit_Flows2",
    standalone2: "Standalone2_React",
    standalone1: "Standalone1_React",
    standalone: "Standalone_React",
    standalone_user: "Standalone_User_React",
    create_flows_suite_1: "Platform_React_Create_Suite1",
    create_flows_suite_1_user: "Platform_React_Create_Suite1_User",
    create_flows_suite_1_user1: "Platform_React_Create_Suite1_User1",
    create_flows_suite_1_user2: "Platform_React_Create_Suite1_User2",
    create_flows_suite_1_user3: "Platform_React_Create_Suite1_User3",
    snowflake: "Platform_React_Snowflake",
    connectors: "Platform_React_Connectors",
    General: "Platform_React_General",
    api_suite: "Platform_Api_Test_Suite",
    "httpconnector2.0": "Platform_httpconnector2.0_Suite",
    "mapper2.0": "Platform_React_Mapper2.0",
    "mapper2.0_user": "Platform_React_Mapper2.0_User",
    "mapper2.0_user1": "Platform_React_Mapper2.0_User1",
    "mapper2.0_user2": "Platform_React_Mapper2.0_User2",
    "em2.0_suite2": "Platform_React_EM2.0_Suite2",
    "mapper2.0_suite2": "Platform_React_Mapper2.0_Suite2",
    Flowbuilder: "Platform_React_Flowbuilder_UI",
    FlowBranching: "Platform_React_Flowbranching",
    FlowBranching_user1: "Platform_React_Flowbranching_user1",
    FlowBranching_user2: "Platform_React_Flowbranching_user2",
    FlowGrouping_IAF: "FlowGrouping_IAF_Suite",
    FlowGrouping_IAF2: "FlowGrouping_IAF_Suite2",
    ilm_integration: "ILM_Integration",
    aliases: "Resource_Alias"
  };
  suites = {
    js_runtime: "js_runtime",
    create_connections: "create_connections",
    edit_connections: "edit_connections",
    create_flows_suite_1: "create_flows_suite_1",
    create_flows_suite_1_user: "create_flows_suite_1_user",
    create_flows_suite_1_user1: "create_flows_suite_1_user1",
    create_flows_suite_1_user2: "create_flows_suite_1_user2",
    create_flows_suite_1_user3: "create_flows_suite_1_user3",
    create_flows_suite_2: "create_flows_suite_2",
    create_flows_suite_2_user: "create_flows_suite_2_user",
    create_flows_suite_2_user1: "create_flows_suite_2_user1",
    create_flows_suite_2_user2: "create_flows_suite_2_user2",
    crypto_flows: "crypto_flows",
    edit_flows: "edit_flows",
    "em2.0": "em2.0",
    template_cloning: "template_cloning",
    "netsuite_ss2.0": "netsuite_ss2.0",
    connectors: "Platform_React_Connectors_Suite",
    AFE: "create_flows_AFE",
    AFE2: "create_flows_AFE2",
    FlowEventReport: "create_flow_event_report",
    Databases: "create_flows_Databases",
    Databases1: "Platform_React_Databases1",
    FileAdaptors: "create_flows_FileAdaptors",
    FileAdaptors1: "create_flows_FileAdaptors1",
    FileAdaptors2: "create_flows_FileAdaptors2",
    RestHttp: "create_flows_Rest_Http",
    RestHttp_user: "Platform_React_RestHttp_user",
    RestHttp_user1: "Platform_React_RestHttp_user1",
    RestHttp_user2: "Platform_React_RestHttp_user2",
    edit_flows2: "Platform_React_Edit_Flows2",
    standalone2: "standalone2",
    standalone1: "standalone1",
    standalone: "standalone",
    standalone_user: "standalone_user",
    snowflake: "snowflake",
    FlowGrouping_IAF: "FlowGrouping_IAF_Suite",
    ilm_integration: "ILM_Integration",
    "mapper2.0": "Mapper2.0",
    "mapper2.0_user": "Mapper2.0_user",
    "mapper2.0_user1": "Mapper2.0_user1",
    "mapper2.0_user2": "Mapper2.0_user2",
    Flowbuilder: "Platform_React_Flowbuilder_UI",
    FlowBranching: "Platform_React_Flowbranching",
    FlowBranching_user1: "Platform_React_Flowbranching_user1",
    FlowBranching_user2: "Platform_React_Flowbranching_user2",
    General: "Platform_React_General",
    api_suite: "api_test_suite",
    "httpconnector2.0": "Platform_httpconnector2.0_Suite",
    FlowGrouping_IAF2: "FlowGrouping_IAF_Suite2",
    "em2.0_suite2": "em2.0_suite2",
    "mapper2.0_suite2": "mapper2.0_suite2",
    aliases: "Resource_Alias"
  };
  suiteOwners = {
    js_runtime: "Ashrith Yalala",
    create_connections: "Ashrith Yalala",
    edit_connections: "Ashrith Yalala",
    create_flows_suite_1: "Dhilip Srinivasan",
    create_flows_suite_1_user: "Dhilip Srinivasan",
    create_flows_suite_1_user1: "Dhilip Srinivasan",
    create_flows_suite_1_user2: "Dhilip Srinivasan",
    create_flows_suite_1_user3: "Dhilip Srinivasan",
    create_flows_suite_2: "Vamsi Rayapati",
    create_flows_suite_2_user: "Vamsi Rayapati",
    crypto_flows: "Ladi Manish",
    edit_flows: "Ladi Manish",
    "em2.0": "Rajaneesh Kumar",
    template_cloning: "Ashrith Yalala",
    "netsuite_ss2.0": "Dhilip Srinivasan",
    connectors: "TBD",
    AFE: "Sai Kaivalya",
    AFE2: "Sai Kaivalya",
    FlowEventReport: "Sai Kaivalya",
    Databases: "Gautham Raj S",
    Databases1: "Gautham Raj S",
    FileAdaptors: "Rajaneesh Kumar",
    FileAdaptors1: "Venkata Akhil Bonthala",
    FileAdaptors2: "Venkata Akhil Bonthala",
    RestHttp: "G Naveen Reddy",
    edit_flows2: "Ladi Manish",
    standalone: "Ladi Manish",
    standalone1: "Gautham",
    standalone2: "TBD",
    standalone_user: "TBD",
    snowflake: "G Naveen Reddy",
    FlowGrouping_IAF: "Akshaya Kunduru",
    FlowGrouping_IAF2: "Akshaya Kunduru",
    ilm_integration: "TBD",
    "mapper2.0": "TBD",
    Flowbuilder: "TBD",
    FlowBranching: "TBD",
    General: "TBD",
    api_suite: "TBD",
    "httpconnector2.0": "TBD",
    "em2.0_suite2": "TBD",
    "mapper2.0_suite2": "TBD"
  };
  CLONING_JSON_CLEANUP_ARR = [
    "createdAt",
    "lastModified",
    "startDate",
    "_id",
    "apiIdentifier",
    "_connectionId",
    "createdAt",
    "sandbox",
    "parsers",
    "transform",
    "filter",
    "sampleData",
    "_fileDefinitionId",
    "responseTransform",
    "_sourceId"
  ];
  EXPORT_JSON_CLEANUP_ARR = [
    "lastModified",
    "startDate",
    "_id",
    "name",
    "sampleData",
    "apiIdentifier",
    "_exportId",
    "_importId",
    "lookupName",
    "qa__",
    "hooks",
    "_userId",
    "url",
    "Id",
    "imports",
    "transform",
    "exports",
    "createdAt",
    "responseTransform",
    "export",
    "import",
    "_flowId",
    "mappingId",
    "folderId",
    "messageBackupFolder",
    "_fileDefinitionId",
    "*.['Vendor Name']",
    "filter",
    "rawData",
    "dataURITemplate",
    "ignoreExtract",
    "ignoreLookupName",
    "sendPostMappedData",
    "successValues",
    "qa_assistantMetadata",
    "qa__rules",
    "qa__path",
    "qa__fileNameStartWith",
    "qa__fileNameEndsWith",
    "qa__token"
  ];

  IMPORTS_JSON_CLEANUP_ARR = [
    "lastModified",
    "startDate",
    "_id",
    "name",
    "sampleData",
    "apiIdentifier",
    "_exportId",
    "_importId",
    "lookupName",
    "hooks",
    "_userId",
    "qa__",
    "url",
    "Id",
    "imports",
    "transform",
    "exports",
    "createdAt",
    "responseTransform",
    "export",
    "import",
    "_flowId",
    "mappingId",
    "folderId",
    "messageBackupFolder",
    "_fileDefinitionId",
    "*.['Vendor Name']",
    "filter",
    "rawData",
    "dataURITemplate",
    "ignoreExtract",
    "ignoreLookupName",
    "sendPostMappedData",
    "successValues",
    "qa_assistantMetadata",
    "qa__rules",
    "qa__path",
    "qa__fileNameStartWith",
    "qa__fileNameEndsWith",
    "qa__token"
  ];
  NS_DND_RECORDS = [
    "3173027",
    "6148561",
    "6534551",
    "6178613",
    "3173026",
    "2536105",
    "2531693",
    "2527889",
    "2349116",
    "2349115",
    "2346913",
    "2346912",
    "680962",
    "648308",
    "648513",
    "648514",
    "650218",
    "2349115",
    "2447162",
    "2441659",
    "2542222",
    "2541915",
    "2541916",
    "2541917",
    "2541918",
    "2541108",
    "2551949",
    "2441660",
    "2541210",
    "129620",
    "2551446",
    "612887",
    "2563057",
    "2659037",
    "2693564",
    "2693665",
    "2761995",
    "3093779",
    "3094381",
    "3246268",
    "3516100",
    "3571509",
    "3515999",
    "3598121",
    "3949275",
    "4007090",
    "4138130",
    "759605",
    "736781",
    "738184",
    "748598",
    "875851",
    "966017",
    "971932",
    "1527578",
    "2346611",
    "2346010",
    "2346009",
    "2290182",
    "2290181",
    "2290180",
    "744672",
    "1316226",
    "1068388",
    "1081495",
    "1081496",
    "1263702",
    "1263703",
    "1263704",
    "1267508",
    "1284925",
    "2295085",
    "2295086",
    "2542823",
    "2295084",
    "2542222",
    "2541109",
    "2551948",
    "2540606",
    "1076",
    "2649731",
    "2660342",
    "2738888",
    "3493297",
    "27805",
    "1847528",
    "5199972",
    "5199973",
    "5199974",
    "5245783",
    "5245784",
    "5245786",
    "1887554",
    "5347428",
    "5288205",
    "5302516",
    "1923154",
    "1924755",
    "1946355",
    "5369633",
    "5499864",
    "2249047",
    "5586672",
    "2042363",
    "5615781",
    "5665907",
    "2069971",
    "2168716",
    "2168817",
    "6281834",
    "6281835",
    "6526750"
  ];
  ZENDESK_DND_RECORDS = [
    "18255",
    "1473313072",
    "382267132219",
    "7421797851922",
    "5951788196626",
    "5935680625426",
    "382286658280",
    "382286658240",
    "360051823505",
    "360027493985",
    "11370067449",
    "11440667845",
    "11369658429",
    "11369658229",
    "11439365405",
    "11367655309",
    "11367087389",
    "11437794705",
    "11437768645",
    "11436160505",
    "11366578985",
    "11379177205",
    "11289611629",
    "4653516129",
    "4588901369",
    "4653522169",
    "4653550269",
    "4653588569",
    "4653600649",
    "7270064425",
    "7678450609",
    "8926614385",
    "8953505209",
    "11374478929",
    "360004691209",
    "360012521429",
    "360011625165",
    "360019660245",
    "360019636189",
    "360019636369",
    "360136639869",
    "360047131059",
    "366865387640",
    "369837218179",
    "373544764399",
    "4089801425",
    "16951647869",
    "4589459825",
    "4581046729",
    "14060286609",
    "14073993569",
    "16987709185",
    "81",
    "126",
    "379541467340",
    "4542",
    "382257192160",
    "382263121799",
    "382281964840",
    "382281965040",
    "382266842959",
    "382290803880",
    "382301075240",
    "382282011819",
    "1900065724014",
    "1900065724774",
    "382332534140",
    "382332534220",
    "7425340861842"
  ];

  SHOPIFY_DND_CUST_RECORDS = [
    "7105841159",
    "4939293255",
    "4869015303",
    "7200656391",
    "5124260888662",
    "5137724866646",
    "5145932890198"
  ];
  SHOPIFY_DND_ORDER_RECORDS = [
    "4434757831",
    "4501132231",
    "6151646535",
    "6142749895",
    "6154917575"
  ];
  CONNECTIONS_DND = [
    "5f808f927e8d4d5f391b8e25",
    "5f90151b6eb5c6461949fc55",
    "5f808f5fd18cf4633dfcad16",
    "5f9bf18c88878c6d3929fffd",
    "5fe98007163cd53f7537fdc4",
    "5ffdab318ff7642582e61c4e",
    "5f9c22af88878c6d392a08e4",
    "626773e4563089236fed7116",
    "626774c0dd4afe56b59c6ebb",
    "632010793bfc725f006391af",
    "632991540dbc53086e89cd4a",
    "632c31090dbc53086e8bcd17",
    "632c30c25cb50d3c39855dc5",
    "632c31559330e00c3cb89776",
    "632c31280dbc53086e8bcd2f"
  ];
  INTEGRATIONS_DND = [
    "6328129c5ee6f456f14b9165",
    "6328176b3eea0d15ecf9f703",
    "639ac0022a818e4415960959"
  ];
  EXPORTS_DND = [
    "5fe426427078277ef8b0394e",
    "5fe9800f163cd53f7537fdc8",
    "5ffbf9688ff7642582e5be8e",
    "5fa271858e25911404a30b46",
    "5fe9800f163cd53f7537fdc9",
    "5fe9800f163cd53f7537fdca",
    "5ffee49bfdb94723b048e736",
    "62668c9a428df20e2020cdac",
    "62668be3737f015ed4afd348",
    "6298e2cea0fa6439f59732f1",
    "629c381cbbe3f43a8c75086c",
    "629edd52ccb94d35de6f4179",
    "629ece6be0c55513e07485ce",
    "629ee17bd5391a2e79b99be9",
    "62944b54d1f83f4ab208669a",
    "62b9d6febb494919d03df816",
    "62cc166792631641676603d2",
    "631ec1ad798cc1729e8af534",
    "631ec7254281e504953f2bed",
    "631ec69b951ea55d52ad7fba",
    "631eccdb4281e504953f2fc4",
    "631ecd5a52e9a959edd75af9",
    "631ece344281e504953f308f",
    "631ece8d52e9a959edd75b3c",
    "631edb0f798cc1729e8b05b8",
    "631edd693097cb1636942172",
    "632d94e8ca06597ef0a75f72"
  ];
  IMPORTS_DND = ["5fe9800f163cd53f7537fdd2"];

  FLOWS_DND = [
    "62a76b330d57d901d066107b",
    "62a84c9a0d57d901d0662edb",
    "62a85f9c0d57d901d0663230",
    "62aac3fe0d57d901d0668211",
    "62b80faf8cdea57883bf8e16",
    "62c3f3f865af202d96b3ef0b",
    "62d04e1c0c804009663fbcf2",
    "6328155b73072a2dce927e1f",
    "632817be3eea0d15ecf9f729",
    "633aafa44f7a5e78f9ee141e",
    "633aa42edf0e90649afcdf02"
  ];
  HUBSPOT_DND_RECORD = ["41052"];
  SALESFORCE_DND_RECORDS = [
    "0013m00002hquUuAAI",
    "0011N00001A2HcQQAV",
    "0011N00001A24NbQAJ",
    "0011N00001A24J5QAJ",
    "0011N000017mD5IQAU",
    "0011N000017m9v6QAA",
    "0011N000017kh49QAA",
    "001o0000015fJjg",
    "0013m00002SJqp9AAD",
    "001o000000vPd3tAAC",
    "0013m00002SIi9IAAT",
    "001o000000vPcYEAA0",
    "001o000000vPcm8AAC",
    "001o000000tWRepAAG",
    "001o000000vPfDAAA0",
    "001o000000tYkFsAAK",
    "001o000000tYkGlAAK",
    "001o000000vPbp5AAC",
    "001o000000vQoz0AAC",
    "001o000000sYPhBAAW",
    "001o000000uVRe1AAG",
    "001o000000zhjxJAAQ",
    "001o000000zhjxOAAQ",
    "001o0000015IuXtAAK",
    "001o000000zhjxUAAQ",
    "0011N00001A1LIAQA3",
    "0011N000017mPEdQAM",
    "0011N00001WsRnjQAF",
    "0031N00001EZZ7UQAX",
    "0031N00001EZY5XQAX",
    "003o000000zfUabAAE",
    "003o000000yWmFoAAK",
    "003o000001Bj6lgAAB",
    "0061N00000QPMs9QAH",
    "0061N00000QPbC7QAL",
    "01to000000078fyAAA",
    "0013m00002SIhkrAAD",
    "0013m00002SJiZhAAL",
    "0013m00002SJiUGAA1",
    "0013m00002SJim9AAD",
    "0013m00002SJidlAAD",
    "0013m00002SJw8qAAD",
    "0013m00002SJw8vAAD",
    "0013m00002SJw90AAD",
    "0013m00002VfgfUAAR",
    "0013m00002b1cANAAY",
    "0013m00002fVPKhAAO",
    "0013m00002hsITVAA2",
    "0013m00002hsTmNAAU",
    "0013m00002j8OmY",
    "0013m00002ejSqLAAU",
    "0013m00002jAaB3AAK",
    "0033m00002wIMfhAAG",
    "0033m00002wIMgaAAG",
    "0013m00002uEDm5AAG"
  ];
  IO_CREATE_SAVED_SEARCH = [
    "607946cdcbef617cacae570e",
    "60813bb53c8c346cdf246376",
    "60828dfb73be3725514c7e5a",
    "60828d5f89506853811bfd1c",
    "6082b1247ccb97777b0fb790",
    "6082b03089506853811c00ab",
    "60b61024c5d63d41275f11d3",
    "60b61dbec5d63d41275f145a",
    "60b6253215cb674992bc9943",
    "60b6266e3b3edd3f0c5f82e7",
    "633412caca06597ef0ab64e0"
  ];
  INTEGRATION_APP = {
    name: "name",
    saveAndClose: "action"
  };

  IO_URL = {
    IO_MAPPER2DOT0_QA_INTEGRATION_URL:
      "https://staging.integrator.io/integrations/56d6b23fe1fc35de53914730/",
    IO_MAPPER2DOT0_STAGING_INTEGRATION_URL:
      "https://staging.integrator.io/integrations/56d6b23fe1fc35de53914730/"
  };

  STANDALONE = {
    IAQA_IO_IntegrationID: "62a3596dd92aff47b2eb83c2",
    IAQA_STAGING_STANDALONE_INTEGRATION:
      "https://staging.integrator.io/integrations/62a3596dd92aff47b2eb83c2/"
  };

  HTTP2dot0 = {
    FLOWBUILDER_STAGING_INTEGRATION_URL:
      "https://staging.integrator.io/integrations/63340890bb74b66e32a92640/",
    FLOWBUILDER_STAGING_INTEGRATION_URL_SANDBOX:
      "https://staging.integrator.io/integrations/63bbc4c10d2e1078c8797d88/",
    FLOWBUILDER_QA_INTEGRATION_URL:
      "https://staging.integrator.io/integrations/633408479fb96473a0c7372c/",
    FLOWBUILDER_QA_INTEGRATION_URL_SANDBOX:
      "https://staging.integrator.io/integrations/63bbc2616c8488070e839cf1/"
  };

  ILM = {
    description: "name",
    Merge: "action"
  };

  ILM_REVERT = {
    description: "name",
    Revert: "action"
  };

  TEMPLATE = {
    name: "name",
    saveAndClose: "action"
  };
  RESTLET_VERSION = {
    suiteapp: "suitebundle"
    // suiteapp2dot0: "suiteapp2.0",
    // suitebundle: "suitebundle"
  };
  SOQL = {
    SF_GET_Automation: "SELECT Id FROM Automation__c"
  };

  DELETE_CONFIG = {
    NS_SO_DELETE_FILTER: "[mainline,is,T]|AND|[datecreated,after,daysago60]",
    NS_PO_DELETE_FILTER: "[Memo,startswith,TC_C24239]",
    NS_DELETE_FILTER: "[datecreated,after,daysago60]",
    NS_ITEM_DELETE_FILTER:
      "[name,startswith,newinventitem]|OR|[name,startswith,garam masala]|OR|[name,startswith,beans]|OR|[name,startswith,Blue Dog]|OR|[name,startswith,Blue Whale]|OR|[name,startswith,Automation__]|OR|[name,startswith,Auto_TC_]",
    NS_NONINVENTORY_ITEM:
      "[name,startswith,TC_332_NonInventoryItem]|OR|[name,startswith,TC_C27784]",
    NS_BOM_DELETE_FILTER: "[name,startswith,New 12]",
    NS_815_DELETE_FILTER: "[name,isnotempty,]",
    NS_ITEMCOLLECTION_DELETE_FILTER: "[name,isnotempty,]",
    NS_BOM_REVISION_DELETE_FILTER: "[name,isnotempty,]",
    NS_LOT_ITEM_DELETE_FILTER:
      "[name,startswith,Automation__LotInventoryitem111]",
    NS_INBOUND_SHIPMENT_FILTER:
      "[Memo,startswith,TC_347]|OR|[Memo,startswith,TC_348]|OR|[Memo,startswith,TC_370]",
    NS_VENDOR_BILL_FILTER:
      "[type,anyof,VendBill]|AND|[mainline,is,T]|AND|[number,between,370,380]",
    NS_INVENTORY_ADJUSTMENT_FILTER:
      "[type,anyof,InvAdjst]|AND|[memo,contains,Inventory509]|AND|[mainline,is,T]",
    NS_ASSEMBLY_BUILD_FILTER: "[type,anyof,Build]|AND|[mainline,is,T]",
    NS_ASSEMBLY_UNBUILD_FILTER: "[type,anyof,Unbuild]|AND|[mainline,is,T]",
    NS_Merchandise_Hierarchy_Node_FILTER: "[name,isnotempty,]",
    NS_Merchandise_Hierarchy_Version_FILTER:
      "[name,startswith,Automation]|OR|[name,startswith,TC_544]|OR|[name,startswith,Testauto]",
    NS_Merchandise_Hierarchy_Level_FILTER:
      "[name,startswith,Automation]|OR|[name,startswith,TC_555]",
    NS_CREDITCARDREFUND: "[type,anyof,CardRfnd]|AND|[memo,startswith,Export_]",
    NS_CREDITCARDTRANSACTION:
      "[type,anyof,CardChrg]|AND|[memo,startswith,Export_]",
    NS_PROMOTIONCODE:
      "[name,startswith,PromotionCode_]|OR|[name,startswith,TC_C]",
    NS_Account:
      "[name,startwith,ZAccount]|OR|[name,startwith,0Account]|OR|[name,startwith,2Account]|OR|[name,startwith,3Account]",
    NS_INVENTORYTRANSFER: "[type,anyof,InvTrnfr]|AND|[memo,is,Automation]"
  };

  FILE_EXTENSIONS = {
    CSV: ".csv",
    JSON: ".json",
    PDF: ".pdf",
    TXT: ".txt",
    PNG: ".PNG",
    XML: ".xml",
    XLSX: ".xlsx",
    EDI: ".edi"
  };
  /**
   *
   * @param adaptor
   */
  // public get(adaptor) {
  //   const map = new ORFactory();
  //   return map.get(adaptor);
  // }
  /**
   *
   * @param application
   */
  //   public pull(application) {
  //     const map = new ConnectionORFactory();
  //     return map.pull(application);
  //   }
}
export const configdata = new configData();
